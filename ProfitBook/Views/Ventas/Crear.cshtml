@model TransaccionMultipleViewModel

@{
    ViewData["Title"] = "Crear";
}

<h2>Transacción Venta</h2>

<div id="error-message" class="alert alert-danger d-none" role="alert"></div>

<form asp-action="Crear" method="post" id="transaccion-form">
    <div class="form-group">
        <label asp-for="Transaccion.FechaTransaccion" class="control-label"></label>
        <input asp-for="Transaccion.FechaTransaccion" class="form-control" value="@ViewBag.FechaActual" type="date" required />
    </div>

    <div class="form-group">
        <label asp-for="Transaccion.CuentaId" class="control-label"></label>
        <select asp-for="Transaccion.CuentaId" class="form-control" required>
            <option value="">Seleccione una cuenta</option>
            @if (ViewBag.Cuentas != null)
            {
                foreach (var cuenta in ViewBag.Cuentas)
                {
                    <option value="@cuenta.Id">@cuenta.Nombre</option>
                }
            }
        </select>
        <span asp-validation-for="Transaccion.CuentaId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Transaccion.VentaMonto" class="control-label"></label>
        <input asp-for="Transaccion.VentaMonto" type="number" class="form-control" placeholder="0" required />
        <span asp-validation-for="Transaccion.VentaMonto" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Transaccion.InversionMonto" class="control-label"></label>
        <input asp-for="Transaccion.InversionMonto" class="form-control" id="inversionMonto" type="number" value="0" readonly />
        <span asp-validation-for="Transaccion.InversionMonto" class="text-danger"></span>
    </div>

    <hr />

    <div class="d-flex align-items-center justify-content-between">
        <h3>Detalles de la Inversión</h3>
    </div>

    <table class="table mt-3">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Precio</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="inversion-rows">
            @if (ViewBag.Productos != null)
            {
                for (int i = 0; i < ViewBag.Productos.Count; i++)
                {
                    var producto = ViewBag.Productos[i];
                    <tr>
                        <td>@producto.Nombre</td>
                        <td>
                            <input name="Inversiones[@i].Precio" class="form-control precio" type="number" placeholder="0" required oninput="updateInversionMonto()" />
                            <input type="hidden" name="Inversiones[@i].ProductoId" value="@producto.Id" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <!-- Validación antes de enviar -->
    <button type="button" class="btn btn-primary" onclick="validateAndSubmit()">Guardar</button>
    <a class="btn btn-secondary" asp-action="Index">Cancelar</a>
</form>

@section Scripts {
    <script>
        function updateInversionMonto() {
            let total = 0;
            document.querySelectorAll(".precio").forEach(function (input) {
                const value = parseFloat(input.value);
                if (!isNaN(value)) {
                    total += value;
                }
            });
            document.getElementById("inversionMonto").value = total.toFixed(2);
        }

        function removeRow(button) {
            const row = button.closest('tr');
            row.remove();
            updateInversionMonto(); // Actualiza el monto de inversión tras eliminar una fila
        }

        document.addEventListener("DOMContentLoaded", function () {
            updateInversionMonto();
        });

        function validateAndSubmit() {
            const cuentaId = document.querySelector('select[name="Transaccion.CuentaId"]').value;
            const inversionMonto = parseFloat(document.getElementById("inversionMonto").value);
            const errorMessage = document.getElementById("error-message");

            let error = "";

            if (!cuentaId) {
                error += "Seleccione una cuenta.\n";
            }

            if (isNaN(inversionMonto) || inversionMonto <= 0) {
                error += "Agrega al menos un producto con precio mayor a 0.\n";
            }

            if (error) {
                errorMessage.textContent = error;
                errorMessage.classList.remove("d-none");

                setTimeout(() => {
                    errorMessage.classList.add("d-none");
                }, 4000);
            } else {
                document.getElementById("transaccion-form").submit();
            }
        }
    </script>
}
