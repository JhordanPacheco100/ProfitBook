@model List<Abono>

@{
    ViewData["Title"] = "Abonar";
    string currentDate = DateTime.Now.ToString("yyyy-MM-dd");
}

<h2>Abonar</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<div id="alert-container"></div>

<form asp-action="GuardarAbono" method="post">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th class="d-none d-sm-table-cell">IdInversion</th>
                    <th>Nombre del Producto</th>
                    <th class="d-none d-sm-table-cell">Total</th>
                    <th>Monto Abono</th>
                    <th>Saldo</th>
                    <th>Fecha Abono</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var abono in Model)
                {
                    <tr>
                        <!-- Id de Inversión solo visible en pantallas medianas o más grandes -->
                        <td class="d-none d-sm-table-cell">@abono.Id</td>
                        <input type="hidden" name="abonos[@Model.IndexOf(abono)].Id" value="@abono.Id" />

                        <td>@abono.ProductoNombre</td>
                        <!-- Total oculto en pantallas pequeñas -->
                        <td class="d-none d-sm-table-cell">@abono.Total</td>

                        <td>
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].ProductoId" value="@abono.ProductoId" />
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].ProductoNombre" value="@abono.ProductoNombre" />
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].Total" value="@abono.Total" />
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].FechaAbono" value="@currentDate" />
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].Estado" value="Adeudado" class="estado-input" />
                            <input type="number" name="abonos[@Model.IndexOf(abono)].MontoAbono" value="0" class="form-control monto-abono" data-total="@abono.Total" min="0" max="@abono.Total" />
                        </td>

                        <td>
                            <span class="saldo-text">@abono.Saldo</span>
                            <input type="hidden" name="abonos[@Model.IndexOf(abono)].Saldo" value="@abono.Saldo" class="saldo-input" />
                        </td>

                        <td>@currentDate</td>
                        <td class="estado">Adeudado</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <a class="btn btn-secondary" asp-action="Index">Cancelar</a>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.monto-abono').forEach(function (input) {
                var saldoInicial = parseFloat(input.closest('tr').querySelector('.saldo-text').textContent);
                input.closest('tr').setAttribute('data-saldo-inicial', saldoInicial);

                input.addEventListener('input', function () {
                    var saldoInicial = parseFloat(input.closest('tr').getAttribute('data-saldo-inicial'));
                    var montoAbono = parseFloat(input.value) || 0;

                    if (montoAbono > saldoInicial) {
                        showAlert('El monto de abono no puede ser mayor que el saldo inicial.');
                        montoAbono = saldoInicial;
                        input.value = saldoInicial;
                    }

                    var saldo = saldoInicial - montoAbono;
                    var saldoCell = input.closest('tr').querySelector('.saldo-text');
                    saldoCell.textContent = saldo.toFixed(2);

                    var saldoInput = input.closest('tr').querySelector('.saldo-input');
                    saldoInput.value = saldo.toFixed(2);

                    var estadoCell = input.closest('tr').querySelector('.estado');
                    var estadoInput = input.closest('tr').querySelector('.estado-input');

                    if (saldo === 0) {
                        estadoCell.textContent = 'Pagado';
                        estadoInput.value = 'Pagado';
                    } else {
                        estadoCell.textContent = 'Adeudado';
                        estadoInput.value = 'Adeudado';
                    }
                });
            });
        });

        function showAlert(message) {
            var alertContainer = document.getElementById('alert-container');
            var alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger';
            alertDiv.textContent = message;
            alertContainer.appendChild(alertDiv);

            setTimeout(function () {
                alertDiv.remove();
            }, 4000);
        }
    </script>
}
